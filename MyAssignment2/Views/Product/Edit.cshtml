@model MyAssignment2.Models.ProductModal
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Product", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(m => m.ProductName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.ProductName, new { @class = "form-control", @placeholder = "Enter Product Name" })
                @Html.ValidationMessageFor(m => m.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ProductCode, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.ProductCode, new { @class = "form-control", @placeholder = "Enter Product Code" })
                @Html.ValidationMessageFor(m => m.ProductCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ProductDescription, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(m => m.ProductDescription, new { @class = "form-control", @placeholder = "Enter Product Desceiption" })
                @Html.ValidationMessageFor(m => m.ProductDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Price, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Price, new { @class = "form-control", @placeholder = "Enter Product Price" })
                @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ProductQty, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.ProductQty, new { @class = "form-control", @placeholder = "Enter Product Qty" })
                @Html.ValidationMessageFor(m => m.ProductQty, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConatctName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.ConatctName, new { @class = "form-control", @placeholder = "Enter Contact Name" })
                @Html.ValidationMessageFor(m => m.ConatctName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConatctEmail, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.ConatctEmail, new { @class = "form-control", @placeholder = "Enter Contact Email" })
                @Html.ValidationMessageFor(m => m.ConatctEmail, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ContactTelephone, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.ContactTelephone, new { @class = "form-control", @placeholder = "Enter Contact Phone" })
                @Html.ValidationMessageFor(m => m.ContactTelephone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">New Image: </label>

            <input type="file" id="fileUpload" name="file" multiple="multiple" />
            <br />
            <label class="control-label col-md-2">Images: </label>
            <div class="col-md-10">
                <div class="container">
                    <div class="row">
                        @foreach (var item in Model.ImageDetails)
                {
                    byte[] bytes = (byte[])@item.Image;
                    string base64String = Convert.ToBase64String(bytes, 0, bytes.Length);
                    string src = "data:image/jpg;base64," + base64String;

                            <div class="col-md-1">
                                <a href="javascript:void(0);" data-id="@item.ImageId" class="deleteItem"><i class="glyphicon glyphicon-remove"> </i></a>
                                <img src="@src" class="img img-responsive" />


                            </div>

                        }
                    </div>


                </div>
                @*<ul class="attachment">
                        @foreach (var item in Model.ImageDetails)
                        {
                            byte[] bytes = (byte[])@item.Image;
                            string base64String = Convert.ToBase64String(bytes, 0, bytes.Length);
                            string src = "data:image/jpg;base64," + base64String;
                            <li>

                                <img src="@src" class="img img-responsive" width="250px" height="250px" />

                                <a href="javascript:void(0);" data-id="@item.ImageId" class="deleteItem">X</a>
                            </li>
                        }
                    </ul>*@

            </div>
            <div class="clearfix"> </div>

            @Html.HiddenFor(m => m.ProductID)
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-warning" })
            </div>
        </div>
    </div>





}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<style type="text/css">
    img {
        filter: gray; /* IE6-9 */
        -webkit-filter: grayscale(1); /* Google Chrome, Safari 6+ & Opera 15+ */
        -webkit-box-shadow: 0px 2px 6px 2px rgba(0,0,0,0.75);
        -moz-box-shadow: 0px 2px 6px 2px rgba(0,0,0,0.75);
        box-shadow: 0px 2px 6px 2px rgba(0,0,0,0.75);
        margin-bottom: 20px;
        height: 250px;
        width: 250px;
    }

        img:hover {
            filter: none; /* IE6-9 */
            -webkit-filter: grayscale(0); /* Google Chrome, Safari 6+ & Opera 15+ */
        }
</style>
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/jquery.multifile.js"></script>
    <script type="text/javascript">
        jQuery(function ($) {
            $('#fileUpload').multifile();
        });

        $('.deleteItem').click(function (e) {
            e.preventDefault();
            var $ctrl = $(this);
            if (confirm('Do you really want to delete this file?')) {
                $.ajax({
                    url: '@Url.Action("DeleteFile")',
                    type: 'POST',
                    data: { id: $(this).data('id') }
                }).done(function (data) {
                    if (data.Result == "OK") {
                        $ctrl.closest('div').remove();
                    }
                    else if (data.Result.Message) {
                        alert(data.Result.Message);
                    }
                }).fail(function () {
                    alert("There is something wrong. Please try again.");
                })

            }
        });
    </script>


}

